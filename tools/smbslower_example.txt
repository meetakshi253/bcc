Demonstrations of smbslower, the Linux eBPF/BCC version.

smbslower shows all SMB operations slower than a threshold, For example:

# ./smbslower.py
Tracing SMB operations that are slower than 10 ms.
ENDTIME  TASK           PID     TYPE                      LATENCY(ms)       SESSIONID        COMPOUND_RQST ASYNC_RQST TREE_ID/ASYNC_ID
00:40:06 xfs_io         13714   SMB2_CREATE               42.267           0x1c40000000069             1            0            5
00:40:06 xfs_io         13714   SMB2_QUERY_INFO           42.316           0x1c40000000069             0            0            5
00:40:06 rm             13716   SMB2_CLOSE                59.336           0x1c40000000069             0            0            5
00:40:06 rm             13716   SMB2_CREATE               44.191           0x1c40000000069             1            0            5
00:40:06 rm             13716   SMB2_CLOSE                44.230           0x1c40000000069             0            0            5
00:40:07 splice-test    13732   SMB2_WRITE                18.860           0x1c40000000069             0            0            5
00:40:07 splice-test    13732   SMB2_READ                 44.848           0x1c40000000069             0            0            5
00:40:07 splice-test    13732   SMB2_READ                 47.545           0x1c40000000069             0            0            5
00:40:07 splice-test    13732   SMB2_CREATE               10.392           0x1c40000000069             1            0            5
00:40:07 splice-test    13732   SMB2_CLOSE                10.433           0x1c40000000069             0            0            5

This shows all SMB operations from xfstest 591, each from the same session 
0x1c40000000069, that had latencies greater than 10 ms. 

This "latency" is measured from when the operation was issued from the VFS
interface to the file system, to when it completed. This spans everything:
RPC latency, network latency, file system CPU cycles, file system locks, run
queue latency, etc. This is a better measure of the latency suffered by
applications reading from a SMB share and can better expose problems
experienced by SMB clients.

The threshold can be provided as an argument. Eg, operations slower than
100 ms:

# ./smbslower.py 100
Tracing SMB operations that are slower than 100 ms.
ENDTIME  TASK           PID     TYPE                      LATENCY(ms)       SESSIONID        COMPOUND_RQST ASYNC_RQST TREE_ID/ASYNC_ID
00:47:26 t4             15625   SMB2_CREATE               121.007          0x1c40000000071             1            0            5
00:47:26 t4             15625   SMB2_CLOSE                121.069          0x1c40000000071             0            0            5
00:47:26 kworker/u12:0  12714   SMB2_WRITE                150.509          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                175.495          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                210.712          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                225.568          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                212.396          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                240.169          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                260.946          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                268.777          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                258.396          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                266.023          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                274.958          0x1c40000000071             0            0            5
00:47:27 kworker/u12:0  12714   SMB2_WRITE                296.252          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                281.901          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                263.576          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                257.660          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                266.713          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                277.511          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                271.633          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                289.379          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                172.211          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                302.901          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                272.931          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                272.892          0x1c40000000071             0            0            5
00:47:28 kworker/u12:0  12714   SMB2_WRITE                270.105          0x1c40000000071             0            0            5
00:47:29 kworker/u12:0  12714   SMB2_WRITE                269.675          0x1c40000000071             0            0            5
00:47:29 kworker/u12:0  12714   SMB2_WRITE                269.223          0x1c40000000071             0            0            5
00:47:29 kworker/u12:0  12714   SMB2_WRITE                169.072          0x1c40000000071             0            0            5
00:47:29 kworker/u12:0  12714   SMB2_WRITE                303.379          0x1c40000000071             0            0            5
00:47:29 t4             15624   SMB2_WRITE                145.912          0x1c40000000071             0            0            5
00:47:29 t4             15624   SMB2_WRITE                201.695          0x1c40000000071             0            0            5
00:47:30 t4             15624   SMB2_WRITE                249.624          0x1c40000000071             0            0            5
00:47:30 t4             15624   SMB2_WRITE                238.612          0x1c40000000071             0            0            5
00:47:30 t4             15624   SMB2_WRITE                238.311          0x1c40000000071             0            0            5
[...]

I had a lot of dirty pages to be written to the server. This shows all
SMB_WRITEs that took more than 100ms. Depending on your latency to your 
fileserver, you might need to tweak this value.

A threshold of 0 will trace all operations. Warning: the output will be
verbose, as it will include all file system cache hits.

# ./smbslower.py 0 -d 10
Tracing SMB operations.
ENDTIME  TASK           PID     TYPE                      LATENCY(ms)       SESSIONID        COMPOUND_RQST ASYNC_RQST TREE_ID/ASYNC_ID
00:53:20 mkdir          17002   SMB2_CREATE               0.974            0x1c40000000071             1            0            5
00:53:20 mkdir          17002   SMB2_QUERY_INFO           1.018            0x1c40000000071             1            0            5
00:53:20 mkdir          17002   SMB2_CLOSE                1.038            0x1c40000000071             0            0            5
00:53:20 mkdir          17002   SMB2_CREATE               1.112            0x1c40000000071             1            0            5
00:53:20 mkdir          17002   SMB2_CLOSE                1.144            0x1c40000000071             0            0            5
00:53:20 kworker/1:0    3773    SMB2_CLOSE                0.615            0x1c40000000071             0            0            5
00:53:20 mkdir          17002   SMB2_CREATE               42.839           0x1c40000000071             1            0            5
00:53:20 mkdir          17002   SMB2_QUERY_INFO           42.888           0x1c40000000071             1            0            5
00:53:20 mkdir          17002   SMB2_CLOSE                42.905           0x1c40000000071             0            0            5
00:53:20 vfstest.sh     17001   SMB2_CREATE               1.028            0x1c40000000071             1            0            5
00:53:20 vfstest.sh     17001   SMB2_QUERY_INFO           1.073            0x1c40000000071             0            0            5
00:53:20 vfstest.sh     17001   SMB2_CREATE               0.818            0x1c40000000071             1            0            5
00:53:20 vfstest.sh     17001   SMB2_QUERY_INFO           0.844            0x1c40000000071             1            0            5
00:53:20 vfstest.sh     17001   SMB2_CLOSE                0.853            0x1c40000000071             0            0            5
00:53:20 vfstest.sh     17001   SMB2_CREATE               0.847            0x1c40000000071             1            0            5
00:53:20 vfstest.sh     17001   SMB2_QUERY_INFO           0.877            0x1c40000000071             1            0            5
00:53:20 vfstest.sh     17001   SMB2_CLOSE                0.887            0x1c40000000071             0            0            5
00:53:20 touch          17003   SMB2_CREATE               0.923            0x1c40000000071             0            0            5
00:53:20 touch          17003   SMB2_FLUSH                1.869            0x1c40000000071             0            0            5
00:53:20 touch          17003   SMB2_SET_INFO             0.509            0x1c40000000071             0            0            5
00:53:21 kworker/2:0    14628   SMB2_CLOSE                1.050            0x1c40000000071             0            0            5

While tracing, the following commands were run in another window

# mkdir dd
# cd dd
# touch f

The output now includes create, query info, close, flush, set info and close
operations. The -d 10 option traces for 10 seconds only.

One can also specify a particular command to be traced.

# ./smbslower.py 20 -c 5 -d 10
Tracing SMB operations that are slower than 20 ms.
Tracing SMB operations for command 5.
ENDTIME  TASK           PID     TYPE                      LATENCY(ms)       SESSIONID        COMPOUND_RQST ASYNC_RQST TREE_ID/ASYNC_ID
00:21:23 mv             54276   SMB2_CREATE               44.804           0x1b80118000065             1            0            5
00:21:23 unlink         54277   SMB2_CREATE               42.524           0x1b80118000065             1            0            5
00:21:23 rm             54278   SMB2_CREATE               44.062           0x1b80118000065             1            0            5

The command to code mapping has been kept the same as the ones used in the
SMB client module. Take a look at smb_commands in smbslower.py.

A -j option will print just the fields (parsable output, csv):

# ./smbslower.py 1 -j 10
ENDTIME_us,TASK,PID,TYPE,LATENCY_us,SESSIONID,COMPOUND_RQST,ASYNC_RQST,TREEID/ASYNCID,
7011830886,mkdir,17414,SMB2_CREATE,1185,0x1c40000000071,1,0,5
7011830938,mkdir,17414,SMB2_QUERY_INFO,1228,0x1c40000000071,1,0,5
7011830962,mkdir,17414,SMB2_CLOSE,1246,0x1c40000000071,0,0,5
7011840273,touch,17415,SMB2_FLUSH,2376,0x1c40000000071,0,0,5
7012861225,kworker/5:0,10818,SMB2_CLOSE,1108,0x1c40000000071,0,0,5

This may be useful for visualizing with another tool, for example, for
producing a scatter plot of ENDTIME vs LATENCY, to look for time-based
patterns.

USAGE message:

# ./smbslower.py -h
usage: smbslower.py [-h] [-p PID] [-c CID] [-d DURATION] [-j] [min_ms]

Trace all SMB operations slower than a threshold, supports SMB2+.

positional arguments:
  min_ms                Minimum IO duration to trace in ms (default=10ms)

options:
  -h, --help            show this help message and exit
  -p PID, --pid PID     Trace this pid only
  -c CID, --cid CID     Trace this command only
  -d DURATION, --duration DURATION
                        total duration of trace in seconds
  -j, --csv             just print fields: comma-separated values

    ./smbslower                 # trace smb operations slower than 10ms
    ./smbslower 1               # trace smb operations slower than 1ms
    ./smbslower -j 1            # ... 1 ms, parsable output (csv)
    ./smbslower 0               # trace all smb operations
    ./smbslower -p 684          # trace pid 684 only
    ./smbslower -c 5            # trace smb operation 5 (0x0005 SMB2_CREATE) only
    ./smbslower -d 10           #trace for 10 seconds only